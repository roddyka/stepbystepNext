{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rodrigoantunes/Sites/Rodrigo/stepbystepNext/src/contexts/CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengesContext\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setHasFinished(false);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"cVu0hsDf1rnm10+qbfS96WIdEJo=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/Users/rodrigoantunes/Sites/Rodrigo/stepbystepNext/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallenge","time","setTime","minutes","Math","floor","seconds","isActive","setIsActive","hasFinished","setHasFinished","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAAQA,aAAR,EAAkCC,UAAlC,EAA8CC,SAA9C,EAAyDC,QAAzD,QAAyE,OAAzE;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AAcA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AACP,IAAIM,gBAAJ;AACA,OAAO,SAASC,iBAAT,OAA+D;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,oBAEpCP,UAAU,CAACG,iBAAD,CAF0B;AAAA,MAE1DK,iBAF0D,eAE1DA,iBAF0D;;AAAA,kBAI1CN,QAAQ,CAAC,MAAM,EAAP,CAJkC;AAAA,MAI3DO,IAJ2D;AAAA,MAIrDC,OAJqD;;AAKlE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAC,EAAhB,CAAhB;AACA,MAAMK,OAAO,GAAGL,IAAI,GAAG,EAAvB;;AANkE,mBAQlCP,QAAQ,CAAC,KAAD,CAR0B;AAAA,MAQ3Da,QAR2D;AAAA,MAQjDC,WARiD;;AAAA,mBAS5Bd,QAAQ,CAAC,KAAD,CAToB;AAAA,MAS3De,WAT2D;AAAA,MAS9CC,cAT8C;;AAalE,WAASC,cAAT,GAAyB;AACrBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASI,cAAT,GAAyB;AACrBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAa,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAN,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACH;;AAEDT,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGc,QAAQ,IAAIN,IAAI,GAAG,CAAtB,EAAwB;AACpBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAI;AAC9BZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIM,IAAGM,QAAQ,IAAIN,IAAI,KAAK,CAAxB,EAA0B;AAC5BS,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAR,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUN,CAACO,QAAD,EAAWN,IAAX,CAVM,CAAT;AAWA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAPA,OAAD;AAAUG,MAAAA,OAAO,EAAPA,OAAV;AAAmBG,MAAAA,WAAW,EAAXA,WAAnB;AAAgCF,MAAAA,QAAQ,EAARA,QAAhC;AAA0CI,MAAAA,cAAc,EAAdA,cAA1C;AAA0DC,MAAAA,cAAc,EAAdA;AAA1D,KAAlC;AAAA,cACKb;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxCeD,iB;;KAAAA,iB","sourcesContent":["import {createContext, ReactNode, useContext, useEffect, useState } from \"react\";\nimport {ChallengesContext} from \"./ChallengesContext\";\n\ninterface CountdownContextData{\n    minutes: number,\n    seconds: number,\n    hasFinished : boolean,\n    isActive: boolean,\n    startCountdown :()=> void,\n    resetCountdown :()=> void\n}\ninterface CountdownProviderProps{\n    children: ReactNode;\n}\n\nexport const CountdownContext = createContext({} as CountdownContextData);\nlet countdownTimeout: NodeJS.Timeout;\nexport function CountdownProvider({children} : CountdownProviderProps){\n\n    const { startNewChallenge } = useContext(ChallengesContext);\n\n    const [time, setTime] = useState(0.1 * 60);\n    const minutes = Math.floor(time/60);\n    const seconds = time % 60;\n\n    const [isActive, setIsActive] = useState(false);\n    const [hasFinished, setHasFinished] = useState(false);\n\n\n\n    function startCountdown(){\n        setIsActive(true);\n    }\n\n    function resetCountdown(){\n        clearTimeout(countdownTimeout);\n        setHasFinished(false);\n        setIsActive(false);\n        setTime(0.1 * 60);\n    }\n\n    useEffect(()=>{\n        if(isActive && time > 0){\n            countdownTimeout = setTimeout(()=>{\n                setTime(time - 1);\n            }, 1000);\n        }else if(isActive && time === 0){\n            setHasFinished(true);\n            setIsActive(false);\n            startNewChallenge();\n        }\n    }, [isActive, time])\n    return(\n        <CountdownContext.Provider value={{minutes, seconds, hasFinished, isActive, startCountdown, resetCountdown}}>\n            {children}\n        </CountdownContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}