{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/rodrigoantunes/Sites/Rodrigo/stepbystepNext/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/rodrigoantunes/Sites/Rodrigo/stepbystepNext/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isModalOpen = _useState5[0],\n      setIsModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [levelUp, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo Desafio', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      activeChallenge: activeChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"8dXbbd61zN+0RIfsfjYRmqQKWuY=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/Users/rodrigoantunes/Sites/Rodrigo/stepbystepNext/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","Cookies","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isModalOpen","setIsModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import {createContext ,useState, ReactNode, useEffect} from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nimport { LevelUpModal } from '../components/LevelUpModal';\n\ninterface ChallengesProviderProps{\n    children: ReactNode,\n    level : number,\n    currentExperience : number,\n    challengesCompleted : number\n      \n}\ninterface Challenge{\n    type:'body' | 'eye',\n    description: string,\n    amount: number\n}\ninterface ChallengesContexData{\n    level: number,\n    currentExperience: number,\n    challengesCompleted : number,\n    activeChallenge: Challenge;\n    experienceToNextLevel: number,\n    levelUp : ()=>void,\n    startNewChallenge : ()=>void,\n    resetChallenge :()=> void,\n    completeChallenge :()=> void,\n    closeLevelUpModal :()=> void,\n}\nexport const ChallengesContext = createContext({} as ChallengesContexData);\n\nexport function ChallengesProvider({children, ...rest}: ChallengesProviderProps){\n    const [level, setLevel] = useState(rest.level ?? 1);\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\n\n    const [activeChallenge, setActiveChallenge] = useState(null);\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const experienceToNextLevel = Math.pow((level + 1)* 4 ,2);\n\n    useEffect(()=>{\n        Notification.requestPermission();\n    }, [])\n\n    useEffect(()=>{\n        Cookies.set('level', String(level));\n        Cookies.set('currentExperience', String(currentExperience));\n        Cookies.set('challengesCompleted', String(challengesCompleted));\n    }, [levelUp, currentExperience, challengesCompleted]);\n\n    function levelUp(){\n        setLevel(level + 1);\n        setIsModalOpen(true);\n    }\n\n    function closeLevelUpModal(){\n        setIsModalOpen(false);\n    }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randomChallengeIndex];\n\n        setActiveChallenge(challenge);\n\n        new Audio('/notification.mp3').play();\n\n        if(Notification.permission === 'granted'){\n            new Notification('Novo Desafio',{\n                body: `Valendo ${challenge.amount}xp!`\n            })\n        }\n    }\n\n    function resetChallenge(){\n        setActiveChallenge(null);\n    }\n\n    function completeChallenge(){\n        if(!activeChallenge){\n            return;\n        }\n        const {amount} = activeChallenge;\n        let finalExperience = currentExperience + amount;\n\n        if(finalExperience >= experienceToNextLevel){\n            finalExperience = finalExperience - experienceToNextLevel;\n            levelUp();\n            \n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n    }\n\n    return (\n        <ChallengesContext.Provider \n        value={{level,\n         currentExperience,\n          challengesCompleted,\n           levelUp,\n            startNewChallenge,\n            resetChallenge,\n            activeChallenge,\n            experienceToNextLevel,\n            completeChallenge, \n            closeLevelUpModal\n            }}>\n            {children}\n\n            { isModalOpen && <LevelUpModal /> }\n        </ChallengesContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}