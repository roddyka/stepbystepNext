{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rodrigoantunes/Sites/Rodrigo/stepbystepNext/src/components/Countdown.tsx\";\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secoundRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownCountainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secoundRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainerButton,\n      children: hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: styles.countdownButton,\n        children: \"Tasks Closed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetCountdown,\n          type: \"button\",\n          className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n          children: \"Abandon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startCountdown,\n          type: \"button\",\n          className: styles.countdownButton,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/rodrigoantunes/Sites/Rodrigo/stepbystepNext/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secoundRight","countdownCountainer","countdownContainerButton","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAASA,UAAT,QAAgD,OAAhD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAoB;AAEvB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,cAA1C;AAA0DC,IAAAA;AAA1D,MAA4ET,UAAU,CAACC,gBAAD,CAA5F;AAEA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAnC;AAIA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,mBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAYA;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACgB,wBAAvB;AAAA,gBACCZ,WAAW,gBACR;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,SAAS,EAAEJ,MAAM,CAACiB,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAOR;AAAA,kBACKZ,QAAQ,gBACL;AACI,UAAA,OAAO,EAAEE,cADb;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,SAAS,EAAG,GAAEP,MAAM,CAACiB,eAAgB,IAAGjB,MAAM,CAACkB,qBAAsB,EAHzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,gBAQD;AACI,UAAA,OAAO,EAAEZ,cADb;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,SAAS,EAAEN,MAAM,CAACiB,eAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATZ;AARJ;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\n\n\n\nexport function Countdown(){\n\n    const {minutes, seconds, hasFinished, isActive, startCountdown, resetCountdown} = useContext(CountdownContext);\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n    const [secondLeft, secoundRight] = String(seconds).padStart(2, '0').split('');\n\n\n\n    return (\n        <div>\n        <div className={styles.countdownCountainer}>\n            <div>\n                <span>{minuteLeft}</span>\n                <span>{minuteRight}</span>\n            </div>\n            <span>:</span>\n            <div>\n                <span>{secondLeft}</span>\n                <span>{secoundRight}</span>\n            </div>\n        </div>\n        <div className={styles.countdownContainerButton}>\n        {hasFinished ? (\n            <button \n                disabled\n                className={styles.countdownButton}>\n                Tasks Closed\n            </button>\n        ) : (\n            <>\n                {isActive ? (\n                    <button \n                        onClick={resetCountdown}\n                        type=\"button\" \n                        className={`${styles.countdownButton} ${styles.countdownButtonActive}`}>\n                        Abandon\n                    </button>\n                    ) : (\n                        <button \n                            onClick={startCountdown}\n                            type=\"button\" \n                            className={styles.countdownButton}>\n                            Start\n                    </button>\n                    )}\n            </>\n        )}\n        </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}